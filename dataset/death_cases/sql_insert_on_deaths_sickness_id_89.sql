WITH vals(id_demographic, id_sickness, incoming_deaths) AS (
  VALUES
    (262, 89, 3),
(263, 89, 4),
(264, 89, 16),
(265, 89, 102),
(266, 89, 379),
(267, 89, 852),
(268, 89, 1205),
(269, 89, 1009),
(270, 89, 1135),
(271, 89, 1),
(272, 89, 1),
(273, 89, 19),
(274, 89, 97),
(275, 89, 403),
(276, 89, 865),
(277, 89, 1107),
(278, 89, 961),
(279, 89, 1234),
(280, 89, 0),
(281, 89, 0),
(282, 89, 6),
(283, 89, 84),
(284, 89, 379),
(285, 89, 778),
(286, 89, 1220),
(287, 89, 1025),
(288, 89, 1225),
(289, 89, 0),
(290, 89, 3),
(291, 89, 12),
(292, 89, 78),
(293, 89, 392),
(294, 89, 805),
(295, 89, 1166),
(296, 89, 1135),
(297, 89, 1249),
(298, 89, 0),
(299, 89, 4),
(300, 89, 20),
(301, 89, 83),
(302, 89, 379),
(303, 89, 723),
(304, 89, 1179),
(305, 89, 1023),
(306, 89, 1266),
(307, 89, 0),
(308, 89, 0),
(309, 89, 18),
(310, 89, 78),
(311, 89, 384),
(312, 89, 797),
(313, 89, 1132),
(314, 89, 964),
(315, 89, 1388),
(316, 89, 0),
(317, 89, 2),
(318, 89, 13),
(319, 89, 76),
(320, 89, 408),
(321, 89, 732),
(322, 89, 1125),
(323, 89, 1005),
(324, 89, 1385),
(325, 89, 0),
(326, 89, 4),
(327, 89, 12),
(328, 89, 66),
(329, 89, 375),
(330, 89, 747),
(331, 89, 1052),
(332, 89, 1158),
(333, 89, 1370),
(334, 89, 0),
(335, 89, 3),
(336, 89, 9),
(337, 89, 66),
(338, 89, 350),
(339, 89, 768),
(340, 89, 1021),
(341, 89, 1172),
(342, 89, 1344),
(343, 89, 0),
(344, 89, 3),
(345, 89, 11),
(346, 89, 57),
(347, 89, 383),
(348, 89, 814),
(349, 89, 1011),
(350, 89, 1193),
(351, 89, 1404),
(352, 89, 0),
(353, 89, 2),
(354, 89, 14),
(355, 89, 70),
(356, 89, 382),
(357, 89, 897),
(358, 89, 1004),
(359, 89, 1215),
(360, 89, 1497),
(361, 89, 0),
(362, 89, 2),
(363, 89, 11),
(364, 89, 84),
(365, 89, 399),
(366, 89, 882),
(367, 89, 993),
(368, 89, 1310),
(369, 89, 1500),
(370, 89, 0),
(371, 89, 0),
(372, 89, 10),
(373, 89, 59),
(374, 89, 367),
(375, 89, 913),
(376, 89, 1000),
(377, 89, 1281),
(378, 89, 1524)


)
INSERT INTO sickness_statistics (id_demographic, id_sickness, count_cases, count_deaths)
SELECT
    v.id_demographic,
    v.id_sickness,
    NULL AS count_cases,
    v.incoming_deaths
FROM vals v
ON CONFLICT (id_demographic, id_sickness)
DO UPDATE SET
    count_deaths = EXCLUDED.count_deaths;